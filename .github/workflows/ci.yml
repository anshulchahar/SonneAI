name: Sonne CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Cancel in-progress runs on new commits to same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: TypeScript & Next.js Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetching the whole history to compare changes
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          # Remove the cache property to avoid errors when lock file doesn't exist
      
      - name: Install dependencies
        working-directory: ./nextjs-temp
        run: npm install # Using 'install' will generate a package-lock.json if it doesn't exist
        timeout-minutes: 5
      
      - name: Get changed TS/JS files
        id: changed-ts-files
        if: github.event_name == 'pull_request'
        run: |
          echo "files=$(git diff --name-only --diff-filter=ACMRTUXB origin/${{ github.base_ref }} ${{ github.sha }} | grep -E '\.(js|jsx|ts|tsx)$' | grep '^nextjs-temp/' | sed 's/^nextjs-temp\///' | xargs)" >> $GITHUB_OUTPUT
      
      - name: Run ESLint on changed files
        if: github.event_name == 'pull_request' && steps.changed-ts-files.outputs.files != ''
        working-directory: ./nextjs-temp
        run: |
          echo "Linting changed TS/JS files: ${{ steps.changed-ts-files.outputs.files }}"
          npx eslint ${{ steps.changed-ts-files.outputs.files }}
        timeout-minutes: 2
      
      - name: Run Next.js lint
        working-directory: ./nextjs-temp
        run: npx next lint
        timeout-minutes: 2
        
      - name: TypeScript type checking
        working-directory: ./nextjs-temp
        run: npx tsc --noEmit
        timeout-minutes: 2

      # Enable caching for future runs now that we have a package-lock.json
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  test:
    name: Jest Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 1  # Shallow clone for speed
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        # Remove the cache property to avoid errors when lock file doesn't exist
    
    - name: Install Node.js dependencies
      working-directory: ./nextjs-temp
      run: npm install
      timeout-minutes: 5
      
    - name: Test with Jest
      working-directory: ./nextjs-temp
      run: |
        npm test -- --coverage
      timeout-minutes: 5
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./nextjs-temp/coverage/coverage-final.json
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

      # Enable caching for future runs now that we have a package-lock.json
    - name: Cache npm dependencies
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
           ${{ runner.os }}-node-

  build:
    name: Build Next.js App
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          # Remove the cache property to avoid errors when lock file doesn't exist
      
      - name: Install dependencies
        working-directory: ./nextjs-temp
        run: npm install
        
      - name: Build Next.js app
        working-directory: ./nextjs-temp
        run: npm run build
        
      - name: Cache Next.js build
        uses: actions/cache@v4
        with:
          path: |
            ./nextjs-temp/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-